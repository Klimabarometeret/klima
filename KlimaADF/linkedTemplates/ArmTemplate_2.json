{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KlimaADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_MET_MEANTEMP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MET"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ABLOB_MET_IN",
								"type": "DatasetReference"
							},
							"name": "ABlobMetMeantemp"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "METMeantempTabell"
						}
					],
					"transformations": [
						{
							"name": "RulleUtData"
						},
						{
							"name": "RulleUtData2"
						}
					],
					"script": "source(output(\n\t\t{@context} as string,\n\t\t{@type} as string,\n\t\tapiVersion as string,\n\t\tcreatedAt as timestamp,\n\t\tcurrentItemCount as short,\n\t\tcurrentLink as string,\n\t\tdata as (observations as (elementId as string, exposureCategory as short, level as (levelType as string, unit as string, value as short), performanceCategory as string, qualityCode as short, timeOffset as string, timeResolution as string, timeSeriesId as boolean, unit as string, value as double)[], referenceTime as string, sourceId as string)[],\n\t\titemsPerPage as short,\n\t\tlicense as string,\n\t\toffset as boolean,\n\t\tqueryTime as double,\n\t\ttotalItemCount as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments',\n\twildcardPaths:['met-data/meantemp.json']) ~> ABlobMetMeantemp\nABlobMetMeantemp foldDown(unroll(data.observations, data.observations),\n\tmapColumn(\n\t\tStasjon = data,\n\t\tDato = data,\n\t\t{Middeltemperatur (dag)} = data\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RulleUtData\nRulleUtData foldDown(unroll(Stasjon.observations, Stasjon.observations),\n\tmapColumn(\n\t\tStasjon = Stasjon.sourceId,\n\t\tDato = Stasjon.referenceTime,\n\t\t{Middeltemperatur (dag)} = Stasjon.observations.value\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RulleUtData2\nRulleUtData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_meantemp',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tStasjon,\n\t\tDato,\n\t\t{Middeltemperatur (dag)}\n\t)) ~> METMeantempTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_MET_NEDBOR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MET"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ABLOB_MET_IN",
								"type": "DatasetReference"
							},
							"name": "ABlobMETNedbor"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "METNedborTabell"
						}
					],
					"transformations": [
						{
							"name": "RulleUtData"
						},
						{
							"name": "RulleUtData2"
						}
					],
					"script": "source(output(\n\t\t{@context} as string,\n\t\t{@type} as string,\n\t\tapiVersion as string,\n\t\tcreatedAt as timestamp,\n\t\tcurrentItemCount as short,\n\t\tcurrentLink as string,\n\t\tdata as (observations as (elementId as string, exposureCategory as short, performanceCategory as string, qualityCode as short, timeOffset as string, timeResolution as string, timeSeriesId as boolean, unit as string, value as double)[], referenceTime as string, sourceId as string)[],\n\t\titemsPerPage as short,\n\t\tlicense as string,\n\t\toffset as boolean,\n\t\tqueryTime as double,\n\t\ttotalItemCount as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'arrayOfDocuments',\n\twildcardPaths:['met-data/nedbor.json']) ~> ABlobMETNedbor\nABlobMETNedbor foldDown(unroll(data.observations, data.observations),\n\tmapColumn(\n\t\tStasjon = data,\n\t\tDato = data,\n\t\t{Nedbør (dag)} = data\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RulleUtData\nRulleUtData foldDown(unroll(Stasjon.observations, Stasjon.observations),\n\tmapColumn(\n\t\tStasjon = Stasjon.sourceId,\n\t\tDato = Stasjon.referenceTime,\n\t\t{Nedbør (dag)} = Stasjon.observations.value\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> RulleUtData2\nRulleUtData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_nedbor',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tStasjon,\n\t\tDato,\n\t\t{Nedbør (dag)}\n\t)) ~> METNedborTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_RETURKRAFT_BRENSEL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Returkraft"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_ABLOB_RETURKRAFT_INN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tDato as date,\n\t\t{Avfall brent (tonn)} as short,\n\t\t{År} as short,\n\t\tMnd as short,\n\t\tDag as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['avfall-data/returkraft.xlsx']) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'returkraft_brensel',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDato,\n\t\t{Avfall brent (tonn)}\n\t)) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_MET_MAXTEMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra MET API og lagre data i BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sjekke om sommertid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_MET_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": {
										"value": "@concat(concat(\n    '?sources=SN39040&referenceTime=1939-12-31T23:59:59Z/', \nstring(if(variables('summertime'), addToTime(utcnow(), 2, 'Hour'), addToTime(utcnow(), 1, 'Hour')))),\n    '&elements=max(air_temperature%20P1D)&timeResolution=days')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_MET_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "maxtemp.json"
								}
							}
						]
					},
					{
						"name": "Formatere til Norsk tidssone",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Hente naavaerende datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetimeFormat",
							"value": {
								"value": "@convertFromUtc(variables('datetime'), 'W. Europe Standard Time')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sjekke om sommertid",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Formatere til Norsk tidssone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "summertime",
							"value": {
								"value": "@equals(string(subtractFromTime(startOfHour(variables('datetimeFormat')), 2, 'Hour')), replace(string(startOfHour(variables('datetime'))), 'Z', ''))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Hente naavaerende datetime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra MET API og lagre data i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_MET_MAXTEMP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobMETMaxtemp": {},
									"METMaxtempTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"datetime": {
						"type": "String"
					},
					"summertime": {
						"type": "Boolean"
					},
					"datetimeFormat": {
						"type": "String"
					},
					"asdf": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MET"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_MET_MEANTEMP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra MET API og lagre data i BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sjekke om sommertid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_MET_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": {
										"value": "@concat(concat(\n    '?sources=SN39040&referenceTime=1939-12-31T23:59:59Z/', \nstring(if(variables('summertime'), addToTime(utcnow(), 2, 'Hour'), addToTime(utcnow(), 1, 'Hour')))),\n    '&elements=mean(air_temperature%20P1D)&timeResolution=days')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_MET_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "meantemp.json"
								}
							}
						]
					},
					{
						"name": "Formatere til Norsk tidssone",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Hente naavaerende datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetimeFormat",
							"value": {
								"value": "@convertFromUtc(variables('datetime'), 'W. Europe Standard Time')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sjekke om sommertid",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Formatere til Norsk tidssone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "summertime",
							"value": {
								"value": "@equals(string(subtractFromTime(startOfHour(variables('datetimeFormat')), 2, 'Hour')), replace(string(startOfHour(variables('datetime'))), 'Z', ''))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Hente naavaerende datetime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra MET API og lagre data i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_MET_MEANTEMP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobMetMeantemp": {},
									"METMeantempTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"datetime": {
						"type": "String"
					},
					"summertime": {
						"type": "Boolean"
					},
					"datetimeFormat": {
						"type": "String"
					},
					"asdf": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MET"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_MET_MEANTEMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_MET_NEDBOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra MET API og lagre data i BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sjekke om sommertid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_MET_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": {
										"value": "@concat(concat(\n    '?sources=SN39040&referenceTime=1939-12-31T23:59:59Z/', \nstring(if(variables('summertime'), addToTime(utcnow(), 2, 'Hour'), addToTime(utcnow(), 1, 'Hour')))),\n    '&elements=sum(precipitation_amount%20P1D)&timeResolution=days')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_MET_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "nedbor.json"
								}
							}
						]
					},
					{
						"name": "Formatere til Norsk tidssone",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Hente naavaerende datetime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetimeFormat",
							"value": {
								"value": "@convertFromUtc(variables('datetime'), 'W. Europe Standard Time')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Sjekke om sommertid",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Formatere til Norsk tidssone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "summertime",
							"value": {
								"value": "@equals(string(subtractFromTime(startOfHour(variables('datetimeFormat')), 2, 'Hour')), replace(string(startOfHour(variables('datetime'))), 'Z', ''))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Hente naavaerende datetime",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "datetime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra MET API og lagre data i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_MET_NEDBOR",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobMETNedbor": {},
									"METNedborTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"datetime": {
						"type": "String"
					},
					"summertime": {
						"type": "Boolean"
					},
					"datetimeFormat": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MET"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_MET_NEDBOR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TRAN_MET_JOIN')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PL_DATA_TRAN_MET_NEDBOR",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_TRAN_MET_MEANTEMP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PL_DATA_TRAN_MET_MAXTEMP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SQL_TRAN_SQL_MET_ALLDATA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SQLMetMaxtempTabell": {},
									"SQLMetMeantempTabell": {},
									"SQLMetNedborTabell": {},
									"METDataTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "PL_DATA_TRAN_MET_MAXTEMP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_TRAN_MET_MAXTEMP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_TRAN_MET_MEANTEMP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_TRAN_MET_MEANTEMP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_DATA_TRAN_MET_NEDBOR",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_DATA_TRAN_MET_NEDBOR",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "MET"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_TRAN_MET_MAXTEMP')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_TRAN_MET_MEANTEMP')]",
				"[concat(variables('factoryId'), '/pipelines/PL_DATA_TRAN_MET_NEDBOR')]"
			]
		}
	]
}
{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KlimaADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_SSB_IN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SSB_HTTP_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_SVV_IN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SVV_HTTP_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SVV"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ";",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_KLD_OVERSIKT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "KLD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobKLDOversikt"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "KLDOversiktTabell"
						}
					],
					"transformations": [
						{
							"name": "LageDatoKolonne"
						}
					],
					"script": "source(output(\n\t\t{År} as short,\n\t\tSektor as string,\n\t\t{Utslipp (tonn CO₂-ekvivalenter)} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'kld-data',\n\tfileName: 'oversikt.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobKLDOversikt\nABlobKLDOversikt derive(Dato = toDate(concat('01/01/', toString({År})), 'dd/MM/yyyy')) ~> LageDatoKolonne\nLageDatoKolonne sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'kld_oversikt',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{År},\n\t\tSektor,\n\t\t{Utslipp (tonn CO₂-ekvivalenter)},\n\t\tDato\n\t)) ~> KLDOversiktTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SSB_06672')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSSB06672"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SSB06672"
						}
					],
					"transformations": [
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tregion as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{06672: Kollektivtransport med buss. Byområde} as double,\n\t\t{_c4} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'ssb-data',\n\tfileName: '06672.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobSSB06672\nABlobSSB06672 derive(Dato = toDate(concat('01/01/', toString({år})), 'dd/MM/yyyy')) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_kollektivtransport_buss',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDato,\n\t\tSted = region,\n\t\tPassasjerer = statistikkvariabel,\n\t\t{Byområde} = {06672: Kollektivtransport med buss. Byområde}\n\t)) ~> SSB06672"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SSB_07832')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSSB07832"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SSB07832Tabell"
						}
					],
					"transformations": [
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tregion as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{07832: Registrerte kjøretøy} as integer,\n\t\t{_c4} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'ssb-data',\n\tfileName: '07832.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobSSB07832\nABlobSSB07832 derive(Dato = toDate(concat('01/01/', toString({år})), 'dd/MM/yyyy'),\n\t\tstatistikkvariabel = case(statistikkvariabel == \"Personbiler\", \"Personbil\",\r\nstatistikkvariabel == \"Busser\", \"Buss\",\r\nstatistikkvariabel == \"Varebiler\", \"Varebil\",\r\nstatistikkvariabel == \"Lastebiler\", \"Lastebil\",\r\nstatistikkvariabel == \"Kombinerte biler\", \"Kombinert bil\",\r\nstatistikkvariabel == \"Traktorer\", \"Traktor\",\r\nstatistikkvariabel == \"Mopeder\", \"Moped\",\r\nstatistikkvariabel == \"Lette motorsykler\", \"Lett motorsykkel\",\r\nstatistikkvariabel == \"Tunge motorsykler\", \"Tung motorsykkel\",\r\nstatistikkvariabel == \"Beltemotorsykler\", \"Beltemotorsykkel\",\r\nstatistikkvariabel == \"Tilhengere\", \"Tilhenger\",\r\nstatistikkvariabel == \"Motorredskap\", \"Motorredskap\"\r\n),\n\t\tregion = case(\r\n    region == \"0 Hele landet\", \"Norge\",\r\n    region == \"K-4204 Kristiansand\", \"Kristiansand\",\r\n    region == \"1001 Kristiansand (-2019)\", \"Kristiansand (-2019)\",\r\n    region == \"1018 Søgne (-2019\", \"Søgne (-2019\",\r\n    region == \"1017 Songdalen (1964-2019)\", \"Songdalen (-2019)\"\r\n)) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tregion as string,\n\t\tmerke as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{07832: Registrerte kjøretøy} as boolean,\n\t\t{_c5} as string\n\t),\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_bilpark_etter_bilberke',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tRegion = region,\n\t\t{År} = {år},\n\t\tBiltype = statistikkvariabel,\n\t\tAntall = {07832: Registrerte kjøretøy},\n\t\tDato\n\t)) ~> SSB07832Tabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SSB_07849')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSSB07849"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SSB07849Tabell"
						}
					],
					"transformations": [
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tregion as string,\n\t\tdrivstofftype as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{07849: Registrerte kjøretøy} as integer,\n\t\t{_c5} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'ssb-data',\n\tfileName: '07849.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobSSB07849\nABlobSSB07849 derive(Dato = toDate(concat('01/01/', toString({år})), 'dd/MM/yyyy'),\n\t\tstatistikkvariabel = case(statistikkvariabel == \"Personbiler\", \"Personbil\",\r\nstatistikkvariabel == \"Ambulanser\", \"Ambulanse\",\r\nstatistikkvariabel == \"Busser\", \"Buss\",\r\nstatistikkvariabel == \"Varebiler\", \"Varebil\",\r\nstatistikkvariabel == \"Kombinerte biler\", \"Kombinert bil\",\r\nstatistikkvariabel == \"Lastebiler\", \"Lastebil\",\r\nstatistikkvariabel == \"Mopeder\", \"Moped\",\r\nstatistikkvariabel == \"Lette motorsykler\", \"Lett motorsykkel\",\r\nstatistikkvariabel == \"Tunge motorsykler\", \"Tung motorsykkel\",\r\nstatistikkvariabel == \"Beltemotorsykler\", \"Beltemotorsykkel\",\r\nstatistikkvariabel == \"Traktorer\", \"Traktor\",\r\nstatistikkvariabel == \"Motorredskaper\", \"Motorredskap\"\r\n),\n\t\tregion = case(\r\n    region == \"0 Hele landet\", \"Norge\",\r\n    region == \"4204 Kristiansand\", \"Kristiansand\",\r\n    region == \"1001 Kristiansand (-2019)\", \"Kristiansand (-2019)\",\r\n    region == \"1018 Søgne (-2019)\", \"Søgne (-2019)\",\r\n    region == \"1017 Songdalen (1964-2019)\", \"Songdalen (-2019)\"\r\n)) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_bilpark_etter_drivstofftype',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{År} = {år},\n\t\tBiltype = statistikkvariabel,\n\t\tSted = region,\n\t\tDrivstoff = drivstofftype,\n\t\tBestand = {07849: Registrerte kjøretøy},\n\t\tDate = Dato\n\t)) ~> SSB07849Tabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SSB_12241')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSSB12241"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SSB12241"
						}
					],
					"transformations": [
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tregion as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{12241: Hushaldsavfall og renovasjon} as double,\n\t\t{_c4} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'ssb-data',\n\tfileName: '12241.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobSSB12241\nABlobSSB12241 derive({År} = toDate(concat('01/01/', toString({år})), 'dd/MM/yyyy'),\n\t\tRegion = case(\r\n    region == \"0 Hele landet\", \"Norge\",\r\n    region == \"4204 Kristiansand\", \"Kristiansand\",\r\n    region == \"1001 Kristiansand (-2019)\", \"Kristiansand (-2019)\",\r\n    region == \"1018 Søgne (-2019)\", \"Søgne (-2019)\",\r\n    region == \"1017 Songdalen (-2019)\", \"Songdalen (-2019)\"\r\n)) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_husholdningsavfall_per_årsinnbygger',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDato = {År},\n\t\tSted = Region,\n\t\tAvfallstype = statistikkvariabel,\n\t\t{Mengde i kg} = {12241: Hushaldsavfall og renovasjon}\n\t)) ~> SSB12241"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SSB_12906')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SSB"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSSB12906"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SSB12906Tabell"
						}
					],
					"transformations": [
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tregion as string,\n\t\t{type registrering} as string,\n\t\tdrivstofftype as string,\n\t\t{år} as short,\n\t\tstatistikkvariabel as string,\n\t\t{12906: Førstegangsregistrerte kjøretøy} as integer,\n\t\t{_c6} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'ssb-data',\n\tfileName: '12906.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> ABlobSSB12906\nABlobSSB12906 derive(Dato = toDate(concat('01/01/', toString({år})), 'dd/MM/yyyy'),\n\t\tstatistikkvariabel = case(statistikkvariabel == \"Personbiler\", \"Personbil\",\r\nstatistikkvariabel == \"Ambulanser\", \"Ambulanse\",\r\nstatistikkvariabel == \"Bobiler\", \"Bobil\",\r\nstatistikkvariabel == \"Busser\", \"Buss\",\r\nstatistikkvariabel == \"Varebiler\", \"Varebil\",\r\nstatistikkvariabel == \"Kombinerte biler\", \"Kombinert bil\",\r\nstatistikkvariabel == \"Lastebiler\", \"Lastebil\",\r\nstatistikkvariabel == \"Mopeder\", \"Moped\",\r\nstatistikkvariabel == \"Lette motorsykler\", \"Lett motorsykkel\",\r\nstatistikkvariabel == \"Tunge motorsykler\", \"Tung motorsykkel\",\r\nstatistikkvariabel == \"Beltemotorsykler\", \"Beltemotorsykkel\",\r\nstatistikkvariabel == \"Traktorer\", \"Traktor\",\r\nstatistikkvariabel == \"Motorredskaper\", \"Motorredskap\"\r\n),\n\t\tregion = case(\r\n    region == \"0 Hele landet\", \"Norge\",\r\n    region == \"4204 Kristiansand\", \"Kristiansand\",\r\n    region == \"1001 Kristiansand (-2019)\", \"Kristiansand (-2019)\",\r\n    region == \"1018 Søgne (-2019)\", \"Søgne (-2019)\",\r\n    region == \"1017 Songdalen (1964-2019)\", \"Songdalen (-2019)\"\r\n)) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_nybilsalg_etter_drivstofftype',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDato,\n\t\tBiltype = statistikkvariabel,\n\t\tSted = region,\n\t\tDrivstoff = drivstofftype,\n\t\t{Solgte biler} = {12906: Førstegangsregistrerte kjøretøy},\n\t\t{År} = {år}\n\t)) ~> SSB12906Tabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SVV_BILTRAFIKK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SVV"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSVVBildata"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SVVBiltrafikkTabell"
						},
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SVVNavnTabell"
						}
					],
					"transformations": [
						{
							"name": "EndreNavnOgSamleData"
						},
						{
							"name": "RedusereKolonnevalg"
						},
						{
							"name": "FiltrereRetning"
						},
						{
							"name": "SlaaSammenNavn"
						}
					],
					"script": "source(output(\n\t\tTrafikkregistreringspunkt as string,\n\t\tNavn as string,\n\t\tVegreferanse as string,\n\t\tFra as string,\n\t\tTil as string,\n\t\tDato as date,\n\t\tFelt as string,\n\t\tVolum as integer,\n\t\t{Dekningsgrad (%)} as string,\n\t\t{Antall timer total} as short,\n\t\t{Antall timer inkludert} as short,\n\t\t{Antall timer ugyldig} as short,\n\t\t{Ikke gyldig lengde} as string,\n\t\t{Lengdekvalitetsgrad (%)} as string,\n\t\t{< 5,6m} as integer,\n\t\t{>= 5,6m} as integer,\n\t\t{5,6m - 7,6m} as integer,\n\t\t{7,6m - 12,5m} as integer,\n\t\t{12,5m - 16,0m} as integer,\n\t\t{>= 16,0m} as integer,\n\t\t{16,0m - 24,0m} as integer,\n\t\t{>= 24,0m} as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'svv-data',\n\tfileName: 'biltrafikk.csv',\n\tcolumnDelimiter: ';',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tencodingName: 'ISO-8859-1',\n\tcolumnNamesAsHeader: true) ~> ABlobSVVBildata\nFiltrereRetning derive({Tung transport} = {>= 5,6m}+{5,6m - 7,6m}+{7,6m - 12,5m}+{12,5m - 16,0m}+{16,0m - 24,0m}+{>= 24,0m},\n\t\tNavn = case(\r\n    Navn == \"GRIM\", \"Grim\",\r\n    Navn == \"Avkjørsel v/ Wilhelm Krag\", \"Vesterveien Avkjørsel\",\r\n    Navn == \"Sødal\", \"Sødal\",\r\n    Navn == \"PRESTEBEKKEN\", \"Bjørndalssletta\",\r\n    Navn == \"PRESTBK RAMPE FRA LU\", \"Bjørndalssletta Påkjørsel\",\r\n    Navn == \"Rampe mot Prestheia\", \"Bjørndalssletta Avkjørsel\",\r\n    Navn == \"Vesterbrua\", \"Vesterveien\",\r\n    Navn == \"TRETJØNNVEIEN\", \"Presteheia\"\r\n),\n\t\tLatitude = case(\r\n    Navn == \"GRIM\", \"58.147417\",\r\n    Navn == \"Avkjørsel v/ Wilhelm Krag\", \"58.141200\",\r\n    Navn == \"Sødal\", \"58.175528\",\r\n    Navn == \"PRESTEBEKKEN\", \"58.161747\",\r\n    Navn == \"PRESTBK RAMPE FRA LU\", \"58.161747\",\r\n    Navn == \"Rampe mot Prestheia\", \"58.161747\",\r\n    Navn == \"Vesterbrua\", \"58.141200\",\r\n    Navn == \"TRETJØNNVEIEN\", \"58.167057\"\r\n),\n\t\tLongditude = case(\r\n    Navn == \"GRIM\", \"7.982470\",\r\n    Navn == \"Avkjørsel v/ Wilhelm Krag\", \"7.975087\",\r\n    Navn == \"Sødal\", \"7.971975\",\r\n    Navn == \"PRESTEBEKKEN\", \"8.021583\",\r\n    Navn == \"PRESTBK RAMPE FRA LU\", \"8.021583\",\r\n    Navn == \"Rampe mot Prestheia\", \"8.021583\",\r\n    Navn == \"Vesterbrua\", \"7.975087\",\r\n    Navn == \"TRETJØNNVEIEN\", \"8.011109\"\r\n)) ~> EndreNavnOgSamleData\nEndreNavnOgSamleData select(mapColumn(\n\t\tTrafikkregistreringspunkt,\n\t\tNavn,\n\t\tDato,\n\t\tVolum,\n\t\t{Lette kjøretøy} = {< 5,6m},\n\t\t{Tunge kjøretøy} = {Tung transport},\n\t\tLongidude = Latitude,\n\t\tLatitude = Longditude\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RedusereKolonnevalg\nABlobSVVBildata filter((Trafikkregistreringspunkt == \"68804V121330\" && Felt == \"Totalt i retning Oddernestunnelen\") ||\n(Trafikkregistreringspunkt == \"02466V121760\" && Felt == \"Totalt i retning KRISTIANSAND\") ||\n(Trafikkregistreringspunkt == \"04813V121368\" && Felt == \"Totalt i retning Kristiansand\") ||\n(Trafikkregistreringspunkt == \"22540V121303\" && Felt == \"Totalt i retning KRISTIANSAND\") ||\n(Trafikkregistreringspunkt == \"16947V121800\" && Felt == \"Totalt i retning KRISTIANSAND\") ||\n(Trafikkregistreringspunkt == \"99454V104306\" && Felt == \"Totalt i retning Lund\") ||\n(Trafikkregistreringspunkt == \"98936V121303\" && Felt == \"Totalt i retning Kristiansand\") ||\n(Trafikkregistreringspunkt == \"73380V121327\" && Felt == \"Totalt i retning Prestheia\")) ~> FiltrereRetning\nRedusereKolonnevalg aggregate(groupBy(Navn),\n\t{NavnSammenslått} = case(\r\n    max(Navn) == \"Grim\", \"Grim\",\r\n    max(Navn) == \"Vesterveien Avkjørsel\", \"Vesterveien\",\r\n    max(Navn) == \"Sødal\", \"Sødal\",\r\n    max(Navn) == \"Bjørndalssletta\", \"Bjørndalssletta\",\r\n    max(Navn) == \"Bjørndalssletta Påkjørsel\", \"Bjørndalssletta Avkjørsel\",\r\n    max(Navn) == \"Bjørndalssletta Avkjørsel\", \"Bjørndalssletta\",\r\n    max(Navn) == \"Vesterveien\", \"Vesterveien\",\r\n    max(Navn) == \"Presteheia\", \"Presteheia\"\r\n)) ~> SlaaSammenNavn\nRedusereKolonnevalg sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'svv_biltrafikk',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTrafikkregistreringspunkt,\n\t\tNavn,\n\t\tDato,\n\t\tTotalt = Volum,\n\t\t{Lette kjøretøy},\n\t\t{Tunge kjøretøy},\n\t\tLatitude,\n\t\tLongidude\n\t)) ~> SVVBiltrafikkTabell\nSlaaSammenNavn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'svv_rel_navn',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\t{NavnRÅ} = Navn,\n\t\tNavn = {NavnSammenslått}\n\t)) ~> SVVNavnTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ABLOB_TRAN_SQL_SVV_SYKKELTRAFIKK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SVV"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_BLOB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "ABlobSVVSykkeldata"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SVVSykkeltrafikkTabell"
						}
					],
					"transformations": [
						{
							"name": "FiltrereTotalt"
						},
						{
							"name": "Koordinater"
						}
					],
					"script": "source(output(\n\t\tTrafikkregistreringspunkt as string,\n\t\tNavn as string,\n\t\tVegreferanse as string,\n\t\tFra as date,\n\t\tTil as date,\n\t\t{År} as short,\n\t\t{Måned} as short,\n\t\tVolum as short,\n\t\t{Konfidensintervall start} as short,\n\t\t{Konfidensintervall slutt} as short,\n\t\t{Dekningsgrad (%)} as string,\n\t\t{Antall døgn total} as short,\n\t\t{Antall døgn inkludert} as short,\n\t\t{Antall døgn ugyldig} as boolean,\n\t\t{Ikke gyldig lengde} as short,\n\t\t{Lengdekvalitetsgrad (%)} as string,\n\t\tFelt as string,\n\t\t{< 5,6m} as string,\n\t\t{>= 5,6m} as string,\n\t\t{5,6m - 7,6m} as string,\n\t\t{7,6m - 12,5m} as string,\n\t\t{12,5m - 16,0m} as string,\n\t\t{16,0m - 24,0m} as string,\n\t\t{>= 24,0m} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'klimabarometer-kristiansand',\n\tfolderPath: 'svv-data',\n\tfileName: 'sykkeltrafikk.csv',\n\tcolumnDelimiter: ';',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tencodingName: 'ISO-8859-1',\n\tcolumnNamesAsHeader: true) ~> ABlobSVVSykkeldata\nABlobSVVSykkeldata filter(Felt == \"Totalt\") ~> FiltrereTotalt\nFiltrereTotalt derive(Latitude = case(\r\n    Navn == \"Vollevann fv452 Sykkel\", \"58.166097\",\r\n    Navn == \"Vollevann E18 Sykkel\", \"58.165371\",\r\n    Navn == \"HANNEVIK (SYKKEL)\", \"58.138605624800746\"\r\n),\n\t\tLongitude = case(\r\n    Navn == \"Vollevann fv452 Sykkel\", \"8.033198\",\r\n    Navn == \"Vollevann E18 Sykkel\", \"8.033532\",\r\n    Navn == \"HANNEVIK (SYKKEL)\", \"7.96389965508359\"\r\n),\n\t\tNavn = case(\r\n    Navn == \"GRIM\", \"Grim\",\r\n    Navn == \"Avkjørsel v/ Wilhelm Krag\", \"Vesterveien Avkjørsel\",\r\n    Navn == \"Vollevann fv452 Sykkel\", \"Vollevann\",\r\n    Navn == \"Vollevann E18 Sykkel\", \"Vollevann v. E18\",\r\n    Navn == \"HANNEVIK (SYKKEL)\", \"Hannevika\"\r\n)) ~> Koordinater\nKoordinater sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'svv_sykkeltrafikk',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTrafikkregistreringspunkt,\n\t\tNavn,\n\t\tDato = Fra,\n\t\tVolum,\n\t\tLatitude,\n\t\tLongitude\n\t)) ~> SVVSykkeltrafikkTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SQL_TRAN_SQL_MET_ALLDATA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "MET"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLMetMaxtempTabell"
						},
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLMetMeantempTabell"
						},
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLMetNedborTabell"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "METDataTabell"
						}
					],
					"transformations": [
						{
							"name": "SlaaSammenData"
						},
						{
							"name": "SlaaSammenData2"
						},
						{
							"name": "NyeKolonner"
						}
					],
					"script": "source(output(\n\t\tStasjon as string,\n\t\tDato as string,\n\t\t{Maksimumstemperatur (dag)} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_maxtemp',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLMetMaxtempTabell\nsource(output(\n\t\tStasjon as string,\n\t\tDato as string,\n\t\t{Middeltemperatur (dag)} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_meantemp',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLMetMeantempTabell\nsource(output(\n\t\tStasjon as string,\n\t\tDato as string,\n\t\t{Nedbør (dag)} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_nedbor',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLMetNedborTabell\nSQLMetMaxtempTabell, SQLMetMeantempTabell join(SQLMetMaxtempTabell@Stasjon == SQLMetMeantempTabell@Stasjon\n\t&& SQLMetMaxtempTabell@Dato == SQLMetMeantempTabell@Dato,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> SlaaSammenData\nSlaaSammenData, SQLMetNedborTabell join(SQLMetMaxtempTabell@Stasjon == SQLMetNedborTabell@Stasjon\n\t&& SQLMetMaxtempTabell@Dato == SQLMetNedborTabell@Dato,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> SlaaSammenData2\nSlaaSammenData2 derive(Stasjonsnavn = case(\r\n    not(isNull(SQLMetMaxtempTabell@Stasjon)), \"Kjevik\",\r\n    not(isNull(SQLMetMeantempTabell@Stasjon)), \"Kjevik\",\r\n    not(isNull(SQLMetNedborTabell@Stasjon)), \"Kjevik\"\r\n),\n\t\tStasjon = case(\r\n    not(isNull(SQLMetMaxtempTabell@Stasjon)), SQLMetMaxtempTabell@Stasjon,\r\n    not(isNull(SQLMetMeantempTabell@Stasjon)), SQLMetMeantempTabell@Stasjon,\r\n    not(isNull(SQLMetNedborTabell@Stasjon)), SQLMetNedborTabell@Stasjon\r\n),\n\t\tDato = toTimestamp(case(\r\n    not(isNull(SQLMetMaxtempTabell@Dato)), SQLMetMaxtempTabell@Dato,\r\n    not(isNull(SQLMetMeantempTabell@Dato)), SQLMetMeantempTabell@Dato,\r\n    not(isNull(SQLMetNedborTabell@Dato)), SQLMetNedborTabell@Dato\r\n), 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSS', 'CEST')) ~> NyeKolonner\nNyeKolonner sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'met_data',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tNavn = Stasjonsnavn,\n\t\tStasjon,\n\t\tDato,\n\t\t{Middeltemperatur (dag)},\n\t\t{Maksimumstemperatur (dag)},\n\t\t{Nedbør (dag)}\n\t)) ~> METDataTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SQL_TRAN_SQL_REL_STED')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Relasjoner"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLSSB07849Tabell"
						},
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLSSB12906Tabell"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "StedTabell"
						}
					],
					"transformations": [
						{
							"name": "SlaaSammenData"
						},
						{
							"name": "AggregereStedsnavn"
						}
					],
					"script": "source(output(\n\t\t{År} as short,\n\t\tBiltype as string,\n\t\tSted as string,\n\t\tDrivstoff as string,\n\t\tBestand as integer,\n\t\tDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_bilpark_etter_drivstofftype',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLSSB07849Tabell\nsource(output(\n\t\tDato as date,\n\t\tBiltype as string,\n\t\tSted as string,\n\t\tDrivstoff as string,\n\t\t{Solgte biler} as integer,\n\t\t{År} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_nybilsalg_etter_drivstofftype',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLSSB12906Tabell\nSQLSSB07849Tabell, SQLSSB12906Tabell join(SQLSSB07849Tabell@Sted == SQLSSB12906Tabell@Sted,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> SlaaSammenData\nSlaaSammenData aggregate(groupBy(SQLSSB07849Tabell@Sted),\n\tStedNY = case(\r\n    max(SQLSSB07849Tabell@Sted) == \"Norge\", \"Norge\",\r\n    max(SQLSSB07849Tabell@Sted) == \"Kristiansand\", \"Kristiansand\",\r\n    max(SQLSSB07849Tabell@Sted) == \"Kristiansand (-2019)\", \"Kristiansand\",\r\n    max(SQLSSB07849Tabell@Sted) == \"Søgne (-2019)\", \"Kristiansand\",\r\n    max(SQLSSB07849Tabell@Sted) == \"Songdalen (-2019)\", \"Kristiansand\"\r\n)) ~> AggregereStedsnavn\nAggregereStedsnavn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_rel_sted',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tStedGammel = Sted,\n\t\tSted = StedNY\n\t)) ~> StedTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SQL_TRAN_SQL_REL_UTSLIPP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Relasjoner"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "SQLSSB12906Tabell"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AZURE_SQL_DB_LINK",
								"type": "LinkedServiceReference"
							},
							"name": "UtslippTabell"
						}
					],
					"transformations": [
						{
							"name": "AggregereDrivstoffOgUtslipp"
						},
						{
							"name": "NyKolonneDrivstoffRAA"
						},
						{
							"name": "VelgeKolonner"
						}
					],
					"script": "source(output(\n\t\tDato as date,\n\t\tBiltype as string,\n\t\tSted as string,\n\t\tDrivstoff as string,\n\t\t{Solgte biler} as integer,\n\t\t{År} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_nybilsalg_etter_drivstofftype',\n\tisolationLevel: 'READ_UNCOMMITTED') ~> SQLSSB12906Tabell\nVelgeKolonner aggregate(groupBy({DrivstoffRÅ}),\n\tDrivstoff = case(\r\n    max({DrivstoffRÅ}) == \"Annet drivstoff\", \"Annet drivstoff\",\r\n    max({DrivstoffRÅ}) == \"Bensin\", \"Bensin\",\r\n    max({DrivstoffRÅ}) == \"Bensin hybrid, ikke ladbar\", \"Hybrid\",\r\n    max({DrivstoffRÅ}) == \"Bensin hybrid, ladbar\", \"Plugin\",\r\n    max({DrivstoffRÅ}) == \"Diesel\", \"Diesel\",\r\n    max({DrivstoffRÅ}) == \"Diesel hybrid, ikke ladbar\", \"Hybrid\",\r\n    max({DrivstoffRÅ}) == \"Diesel hybrid, ladbar\", \"Plugin\",\r\n    max({DrivstoffRÅ}) == \"El.\", \"Elektrisitet\",\r\n    max({DrivstoffRÅ}) == \"Gass\", \"Gass\",\r\n    max({DrivstoffRÅ}) == \"Hydrogen\", \"Hydrogen\",\r\n    max({DrivstoffRÅ}) == \"Parafin\", \"Parafin\"\r\n),\n\t\tUtlippsintensitet = case(\r\n    max({DrivstoffRÅ}) == \"Annet drivstoff\", \"Ukjent\",\r\n    max({DrivstoffRÅ}) == \"Bensin\", \"Fossil\",\r\n    max({DrivstoffRÅ}) == \"Bensin hybrid, ikke ladbar\", \"Fossil\",\r\n    max({DrivstoffRÅ}) == \"Bensin hybrid, ladbar\", \"Lavutslipp\",\r\n    max({DrivstoffRÅ}) == \"Diesel\", \"Fossil\",\r\n    max({DrivstoffRÅ}) == \"Diesel hybrid, ikke ladbar\", \"Fossil\",\r\n    max({DrivstoffRÅ}) == \"Diesel hybrid, ladbar\", \"Lavutslipp\",\r\n    max({DrivstoffRÅ}) == \"El.\", \"Nullutslipp\",\r\n    max({DrivstoffRÅ}) == \"Gass\", \"Gass\",\r\n    max({DrivstoffRÅ}) == \"Hydrogen\", \"Nullutslipp\",\r\n    max({DrivstoffRÅ}) == \"Parafin\", \"Fossil\"\r\n)) ~> AggregereDrivstoffOgUtslipp\nSQLSSB12906Tabell derive({DrivstoffRÅ} = Drivstoff) ~> NyKolonneDrivstoffRAA\nNyKolonneDrivstoffRAA select(mapColumn(\n\t\tDato,\n\t\tBiltype,\n\t\tSted,\n\t\t{DrivstoffRÅ},\n\t\t{Solgte biler},\n\t\t{År}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VelgeKolonner\nAggregereDrivstoffOgUtslipp sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tstore: 'sqlserver',\n\tschemaName: 'dbo',\n\ttableName: 'ssb_rel_utslippsintensitet',\n\tinsertable: true,\n\tupdateable: false,\n\tdeletable: false,\n\tupsertable: false,\n\trecreate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tDrivstoff,\n\t\t{DrivstoffRÅ},\n\t\tUtlippsintensitet\n\t)) ~> UtslippTabell"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_KLD_OVERSIKT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra KLD API og lagre i BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_KLD_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "excel?areaId=640",
									"sheetName": "Oversikt"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_KLD_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "oversikt.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra KLD API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_KLD_OVERSIKT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobKLDOversikt": {},
									"KLDOversiktTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "KLD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_KLD_OVERSIKT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SSB_06672')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SSB API og lagre i BLOB",
						"description": "Legg inn table ID på relativeUrl variabel udner source\nLegg api spørring fra SSB api console under body på source (husk å endre \"json-stat2\" -> \"csv2\" nederst i json spørring\n\nSjekk at mapping er tom. Hvis IKKE -> Trykk på \"Clear\" knappen",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestBody": "{\n  \"query\": [\n    {\n      \"code\": \"Region\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"10\"\n        ]\n      }\n    },\n    {\n      \"code\": \"ContentsCode\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"Passasjer\"\n        ]\n      }\n    },\n    {\n      \"code\": \"Tid\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"2010\",\n          \"2011\",\n          \"2012\",\n          \"2013\",\n          \"2014\",\n          \"2015\",\n          \"2016\",\n          \"2017\",\n          \"2018\",\n          \"2019\",\n          \"2020\"\n        ]\n      }\n    }\n  ],\n  \"response\": {\n    \"format\": \"csv2\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SSB_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "06672"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SSB_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "06672.csv"
								}
							}
						]
					},
					{
						"name": "Traformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SSB API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SSB_06672",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSSB06672": {},
									"SSB06672": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SSB_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SSB_06672')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SSB_07832')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SSB API og lagre i BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestBody": "{\n  \"query\": [\n    {\n      \"code\": \"Region\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"0\",\n          \"4204\",\n          \"1001\",\n          \"1017\",\n          \"1018\"\n        ]\n      }\n    },\n    {\n      \"code\": \"Kjoretoy\",\n      \"selection\": {\n        \"filter\": \"all\",\n        \"values\": []\n      }\n    }\n  ],\n  \"response\": {\n    \"format\": \"csv2\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SSB_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "07832"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SSB_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "07832.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SSB API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SSB_07832",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSSB07832": {},
									"SSB07832Tabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SSB_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SSB_07832')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SSB_07849')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SSB API og lagre i BLOB",
						"description": "Velg Source: SSB_HTTP\nVelg Sink: SSB_BLOB_OUTPUT\n\nLegg inn table ID på relativeUrl variabel under source\nLegg api spørring fra SSB api console under body på source (husk å endre \"json-stat2\" -> \"csv2\" nederst i json spørring\n\nSjekk at mapping er tom. Hvis IKKE -> Trykk på \"Clear\" knappen\n\n@activity('GetApiTitle').output.label som sink filename",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestBody": "{\n  \"query\": [\n    {\n      \"code\": \"Region\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"0\",\n          \"4204\",\n          \"1001\",\n          \"1017\",\n          \"1018\",\n        ]\n      }\n    },\n    {\n      \"code\": \"DrivstoffType\",\n      \"selection\": {\n        \"filter\": \"all\",\n        \"values\": [\n          \"*\"\n        ]\n      }\n    },\n    {\n      \"code\": \"ContentsCode\",\n      \"selection\": {\n        \"filter\": \"all\",\n        \"values\": [\n          \"*\"\n        ]\n      }\n    },\n    {\n      \"code\": \"Tid\",\n      \"selection\": {\n        \"filter\": \"all\",\n        \"values\": [\n          \"*\"\n        ]\n      }\n    }\n  ],\n  \"response\": {\n    \"format\": \"csv2\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SSB_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "07849"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SSB_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "07849.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SSB API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SSB_07849",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSSB07849": {},
									"SSB07849Tabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SSB_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SSB_07849')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SSB_12241')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SSB API og lagre i BLOB",
						"description": "Legg inn table ID på relativeUrl variabel udner source\nLegg api spørring fra SSB api console under body på source (husk å endre \"json-stat2\" -> \"csv2\" nederst i json spørring\n\nSjekk at mapping er tom. Hvis IKKE -> Trykk på \"Clear\" knappen",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestBody": "{\n  \"query\": [\n    {\n      \"code\": \"KOKkommuneregion0000\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n\"0\",\n          \"4204\",\n          \"1001\",\n          \"1017\",\n          \"1018\"\n        ]\n      }\n    },\n    {\n      \"code\": \"ContentsCode\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"KOShushavfaarsin0000\",\n          \"KOShushavfbilaar0000\",\n          \"KOSlevmatgjbioaa0000\",\n          \"KOSfaravfaarsinn0000\"\n        ]\n      }\n    }\n  ],\n  \"response\": {\n    \"format\": \"csv2\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SSB_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "12241"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SSB_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "12241.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SSB API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SSB_12241",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSSB12241": {},
									"SSB12241": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SSB_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SSB_12241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SSB_12906')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SSB API og lagre i BLOB",
						"description": "Legg inn table ID på relativeUrl variabel udner source\nLegg api spørring fra SSB api console under body på source (husk å endre \"json-stat2\" -> \"csv2\" nederst i json spørring\n\nSjekk at mapping er tom. Hvis IKKE -> Trykk på \"Clear\" knappen",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"requestBody": "{\n  \"query\": [\n    {\n      \"code\": \"Region\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"0\",\n          \"4204\",\n          \"1001\",\n          \"1017\",\n          \"1018\"\n        ]\n      }\n    },\n    {\n      \"code\": \"TypeRegistrering\",\n      \"selection\": {\n        \"filter\": \"item\",\n        \"values\": [\n          \"N\"\n        ]\n      }\n    },\n    {\n      \"code\": \"DrivstoffType\",\n      \"selection\": {\n        \"filter\": \"all\",\n        \"values\": [\n          \"*\"\n        ]\n      }\n    }\n  ],\n  \"response\": {\n    \"format\": \"csv2\"\n  }\n}",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SSB_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": "12906"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SSB_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "12906.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SSB API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SSB_12906",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSSB12906": {},
									"SSB12906Tabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SSB"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SSB_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SSB_12906')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DATA_TRAN_SVV_BILTRAFIKK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hente data fra SVV API og lagre i BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_SVV_IN",
								"type": "DatasetReference",
								"parameters": {
									"relativeUrl": {
										"value": "export?from=2017-03-01&resolution=DAY&to=2021-07-08&trpIds=02466V121760%2C04813V121368%2C16947V121800%2C22540V121303%2C98936V121303%2C99454V104306%2C68804V121330",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ABLOB_SVV_OUT",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "biltrafikk.csv"
								}
							}
						]
					},
					{
						"name": "Transformere data og lagre i SQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Hente data fra SVV API og lagre i BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ABLOB_TRAN_SQL_SVV_BILTRAFIKK",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ABlobSVVBildata": {},
									"SVVBiltrafikkTabell": {},
									"SVVNavnTabell": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "SVV"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_SVV_IN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ABLOB_TRAN_SQL_SVV_BILTRAFIKK')]"
			]
		}
	]
}
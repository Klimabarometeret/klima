{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "KlimaADF"
		},
		"AZURE_BLOB_LINK_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZURE_BLOB_LINK'"
		},
		"AZURE_SQL_DB_LINK_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AZURE_SQL_DB_LINK'"
		},
		"csv_lake_linked_service_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'csv_lake_linked_service'"
		},
		"MET_HTTP_LINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rim.met.no/api/v1/observations"
		},
		"SSB_HTTP_LINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.ssb.no/api/v0/no/table/"
		},
		"SSB_REST_LINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.ssb.no/api/v0/no/table/"
		},
		"SVV_HTTP_LINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://www.vegvesen.no/trafikkdata/api/"
		},
		"csv_lake_linked_service_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://stg2yj4b3un2o3rq.dfs.core.windows.net"
		},
		"TriggerOnStorageBlobCreate_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/828f9a73-7ecc-4f88-9abe-3c39c71ec80f/resourceGroups/klima-rg/providers/Microsoft.Storage/storageAccounts/klimastacc"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SVV_DATA_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://www.vegvesen.no/trafikkdata/api/",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"query": "{\n publishedAreaTrafficVolumeIndex(id: 956, year: 2020, month: 12) {\n id\n name\n period {\n calculationMonth {\n year\n month\n }\n }\n containsPointTrafficVolumeIndices {\n edges {\n node {\n \tpointTrafficVolumeIndex {\n trafficRegistrationPoint {\n id\n name\n }\n }\n }\n }\n }\n }\n}",
								"variables": null
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Web1').output.data.publishedAreaTrafficVolumeIndex[0].containsPointTrafficVolumeIndices.edges",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Web",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://www.vegvesen.no/trafikkdata/api/",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@concat('{\"query\":\"{\\n  trafficData(trafficRegistrationPointId: \\\"',item().node.pointTrafficVolumeIndex.trafficRegistrationPoint.id,'\\\") {\\n    trafficRegistrationPoint{\\n      name\\n    }\\n    volume {\\n      byDay(from:\\\"2017-10-24T06:55:47.172Z\\\", to:\\\"2020-05-24T06:55:47.172Z\\\") {\\n        edges {\\n          cursor\\n          node{\\n            from\\n            to\\n            total {\\n              volumeNumbers\\n              {\\n                volume\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\"variables\":null}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Web",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "testStringTemp",
										"value": {
											"value": "@concat(variables('testString'), activity('Web1').output, ',')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "testString",
										"value": {
											"value": "@variables('testStringTemp')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "testString",
							"value": " \"allData\": ["
						}
					},
					{
						"name": "SLUTT",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "testStringTemp",
							"value": {
								"value": "@concat(variables('testString'), ']')",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"trafikkPunktIDogNavn": {
						"type": "Array"
					},
					"testString": {
						"type": "String"
					},
					"testStringTemp": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-01T16:09:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZURE_BLOB_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AZURE_BLOB_LINK_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZURE_SQL_DB_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AZURE_SQL_DB_LINK_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MET_HTTP_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('MET_HTTP_LINK_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSB_HTTP_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SSB_HTTP_LINK_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSB_REST_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('SSB_REST_LINK_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVV_HTTP_LINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('SVV_HTTP_LINK_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_lake_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('csv_lake_linked_service_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('csv_lake_linked_service_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerOnStorageBlobCreate')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/ssbdata/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TriggerOnStorageBlobCreate_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AZURE_SQL_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_SQL_DB_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "ssb",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_SQL_DB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MET_BLOB_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "metdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MET_BLOB_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "metdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MET_HTTP_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MET_HTTP_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MET_HTTP_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSB_BLOB_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "ssbdata"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSB_BLOB_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "ssbdata"
					},
					"columnDelimiter": ",",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSB_HTTP_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SSB_HTTP_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SSB_HTTP_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVV_BLOB_INPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "svvdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVV_BLOB_INPUT_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "svvdata"
					},
					"columnDelimiter": ";",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVV_BLOB_OUTPUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "svvdata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVV_BLOB_OUTPUT_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AZURE_BLOB_LINK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"container": "svvdata"
					},
					"columnDelimiter": ";",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AZURE_BLOB_LINK')]"
			]
		}
	]
}